#include<windows.h>
#include <GL/glut.h>
#include <stdio.h>
#include <GL/gl.h>
#include <math.h>

GLfloat	tx	=  0.0;
GLfloat	ty	=  0.0;


static float	car_run	=  0.0;
static float	car_run2 =  0.0;
static float	boat_move =  0.0;
static float	cloud_right =  0.0;
static float	cloud_left =  0.0;
static float	plane_move =  0.0;
float t=0;


void init(void)
{
  glClearColor(0.0,0.0,0.0,0.0);
  glMatrixMode(GL_PROJECTION);
  glLoadIdentity();
  glOrtho(-50,50,-50,25,-25,5);

}

void circle(GLfloat rx,GLfloat ry,GLfloat cx,GLfloat cy)
{

    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(cx,cy);

    for(int i=0;i<=100;i++)

    {
        float angle = 2.0f * 3.1416f * i/100;

        float x = rx * cosf(angle);
        float y = ry * sinf(angle);

        glVertex2f((x+cx),(y+cy));
    }
    glEnd();

}


void cloud1(){
    //Cloud1

    glPushMatrix();
	glTranslatef(-60.0f, 5.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,14,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,16.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,19.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,15.5,13.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,18.3,13.2);
   glPopMatrix();

}

void cloud2(){
    //Cloud2

    glPushMatrix();
	glTranslatef(-40.0f, 0.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,14,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,16.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,19.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,15.5,13.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,18.3,13.2);
glPopMatrix();

}

void cloud3(){
    //Cloud3

    glPushMatrix();
	glTranslatef(-30.0f, 8.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

  glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,19,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,20.5,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,22,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,19.5,11.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,21.0,11.2);

glPopMatrix();

}


void cloud4(){
    //Cloud4

    glPushMatrix();
	glTranslatef(-10.0f, 7.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,14,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,16.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,19.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,15.5,13.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,18.3,13.2);
glPopMatrix();

}

void cloud5(){
       //Cloud5

    glPushMatrix();
	glTranslatef(-10.0f, 7.0f, 0.0f);
	glRotatef(0, 0.0f, 1.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,14,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,16.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,19.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,15.5,13.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,18.3,13.2);
glPopMatrix();

}

void cloud6(){
    //Cloud6

    glPushMatrix();
	glTranslatef(0.0f, 0.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

  glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,19,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,20.5,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,22,10);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,19.5,11.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(1,1,21.0,11.2);

glPopMatrix();

}

void cloud7(){
    //Cloud7

    glPushMatrix();
	glTranslatef(28.0f, 0.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,14,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,16.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,19.5,11);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,15.5,13.2);

   glColor3f(1.0f, 1.0f, 1.0f);
   circle(2,2,18.3,13.2);
glPopMatrix();

}

void plane()
{
    glColor3f(0,0,0.2);
    glBegin(GL_POLYGON);
    glVertex2f(21,20);
    glVertex2f(18,19);
    glVertex2f(21,19);
    glVertex2f(24,19);
    glVertex2f(24,20);
    glVertex2f(25,21);
    glEnd();

    glColor3f(1,1,1);
    circle(.2,.2,20,19.6);
    glColor3f(0,0,1);
    circle(.2,.2,23.8,20);
    glColor3f(1,0,0);
    circle(.2,.2,23.8,19.5);

}



void cloud1_move()
{
    cloud_right=cloud_right+0.0005;
    if (cloud_right>100)
        cloud_right=-50;
    glutPostRedisplay();
}

void cloud6_move()
{
    cloud_right=cloud_right+0.0005;
    if (cloud_right>100)
        cloud_right=-70;
    glutPostRedisplay();
}

void cloud7_move()
{
    cloud_left=cloud_left+0.0005;
    if (cloud_left<-60)
        cloud_left=70;
    glutPostRedisplay();
}



void cloud3_move()
{
    cloud_left=cloud_left+0.0005;
    if (cloud_left<-60)
        cloud_left=70;
    glutPostRedisplay();
}


void plane_Move()
{
    plane_move=plane_move-0.04;
    if (plane_move<-100)
        plane_move=30;
    glutPostRedisplay();
}

void sky(){
//sky
    glColor3f(0.4,0.7,1.0);
	glBegin(GL_POLYGON);
	glVertex2f(-50,-10);
	glVertex2f(50,-10);
	glVertex2f(50,35);
	glVertex2f(-50,35);
	glEnd();

}


void Sun(){
//Sun
    glPushMatrix();
	glTranslatef(35.0f, 5.0f, 0.0f);
	glRotatef(0, 0.0f, 0.0f, -1.0f);

   glColor3f(1.0f, 1.0f, 0.0f);
   circle(3,3,4.5,11.5);
glPopMatrix();

}


void Day()
{  glClear(GL_COLOR_BUFFER_BIT);
    //sky
	sky();

    //Sun
    Sun();


    plane_Move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(plane_move+i,0,0);
       plane();
       glPopMatrix();
   }



    cloud1_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_right+i,0,0);
       cloud1();
       glPopMatrix();
   }

   cloud1_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_right+i,0,0);
       cloud2();
       glPopMatrix();
   }

   cloud3_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_left+i,0,0);
       cloud3();
       glPopMatrix();
   }

   cloud3_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_left+i,0,0);
       cloud4();
       glPopMatrix();
   }

   cloud1_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_right+i,0,0);
       cloud5();
       glPopMatrix();
   }

   cloud6_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_right+i,0,0);
       cloud6();
       glPopMatrix();
   }

   cloud7_move();
    for(int i=0; i<1; i++)
   {
       glPushMatrix();
       glTranslatef(cloud_left+i,0,0);
       cloud7();
       glPopMatrix();
   }





glutSwapBuffers();


}


void spe_key(int key, int x, int y)
{

	switch (key) {

		case GLUT_KEY_UP:
				//ty +=5;
				PlaySound("sweet_tone.wav", NULL, SND_ASYNC|SND_FILENAME);
				t=1;

glutPostRedisplay();
				break;


        case GLUT_KEY_DOWN:
				//ty +=5;
				PlaySound(NULL, NULL, 0);
				t=0;
                glutPostRedisplay();
				break;

        default:
			break;
	}
}


int main(int argc,char **argv){
    glutInit(&argc,argv);
    glutInitDisplayMode ( GLUT_RGB | GLUT_DOUBLE );
    glutInitWindowPosition(30,0);
    glutInitWindowSize(1000,650);
    glutCreateWindow("Cool City");
    init();
    glutSpecialFunc(spe_key);
    glutDisplayFunc(Day);
//    glutKeyboardFunc(handleKeypress);
    glutMainLoop();
    return 0;
}
